<?xml version="1.0" encoding="UTF-8"?>
<!-- Repository and Service layers -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- ========================= RESOURCE DEFINITIONS ========================= -->

    <!-- import the dataSource definition -->
    <import resource="datasource.xml" />
    <import resource="jmx.xml" />

    <context:component-scan base-package="com.scipub">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
        <context:exclude-filter type="regex" expression="com\.scipub\.web\..*" />
    </context:component-scan>

    <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    <!-- (in this case, JDBC-related settings for the JPA EntityManager definition below) -->
    <context:property-placeholder location="file:${scipub.config.location}/scipub.properties"
        system-properties-mode="OVERRIDE" />

    <!-- enables scanning for @Transactional annotations -->
    <tx:annotation-driven />


    <task:scheduler id="poolScheduler" pool-size="5" />
    <task:annotation-driven scheduler="poolScheduler" />
    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="resourceLoaderPath" value="classpath:/emailTemplates" />
        <property name="velocityPropertiesMap">
            <util:map>
                <entry key="resource.loader.cache" value="true" />
            </util:map>
        </property>
    </bean>

    <!-- ================== 2 Profiles to choose from =================== - jpa - spring-data-jpa ============================================================================= -->

    <!-- JPA EntityManagerFactory -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        p:dataSource-ref="dataSource">
        <property name="jpaVendorAdapter">
            <!-- the 'database' parameter refers to the database dialect being used. By default, Hibernate will use a 
                'HSQL' dialect because 'jpa.database' has been set to 'HSQL' inside file spring/data-access.properties -->
            <bean class="com.scipub.util.HibernateExtendedJpaVendorAdapter" p:databasePlatform="${hibernate.dialect}"
                p:showSql="${hibernate.showSql}">
                <property name="generateDdl" value="${hibernate.generateDDL}" />
                <!-- custom properties -->
                <property name="vendorProperties">
                    <util:map>
                        <entry key="hibernate.generate_statistics" value="${hibernate.statistics.enabled}" />
                        <entry key="hibernate.hbm2ddl.import_files" value="/sql/science_branches.sql" />
                        <entry key="net.sf.ehcache.configurationResourceName" value="ehcache.xml" />
                    </util:map>
                </property>
            </bean>
        </property>
        <!-- BOTH Persistence Unit and Packages to Scan are NOT compatible, persistenceUnit will win -->
        <property name="persistenceUnitName" value="scipub" />
        <property name="packagesToScan" value="com.scipub.model" />
    </bean>

    <!-- Transaction manager for a single JPA EntityManagerFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
        p:entityManagerFactory-ref="entityManagerFactory" />


    <!-- Post-processor to perform exception translation on @Repository classes (from native exceptions such as JPA PersistenceExceptions 
        to Spring's DataAccessException hierarchy). -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

    <beans profile="jpa">
        <!-- Loads JPA beans Will automatically be transactional due to @Transactional. EntityManager will be auto-injected 
            due to @PersistenceContext. PersistenceExceptions will be auto-translated due to @Repository. -->
        <context:component-scan base-package="com.scipub.dao.jpa" />
    </beans>

    <beans profile="spring-data-jpa">
        <jpa:repositories base-package="com.scipub.dao.springdatajpa" />
    </beans>
</beans>